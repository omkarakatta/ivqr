% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess_iqr_milp.R
\name{preprocess_iqr_milp}
\alias{preprocess_iqr_milp}
\title{Compute IQR estimator by preprocessing MILP}
\usage{
preprocess_iqr_milp(
  Y,
  D,
  X,
  Z,
  tau,
  prop_alpha_initial = 0.7,
  r = 1.25,
  show_iterations = FALSE,
  ...
)
}
\arguments{
\item{Y}{Dependent variable (vector of length n)}

\item{D}{Endogenous variable (n by p_D matrix)}

\item{X}{Exogenous variable (including constant vector) (n by p_X matrix)}

\item{Z}{Instrumental variable (n by p_Z matrix)}

\item{tau}{Quantile (number strictly between 0 and 1)}

\item{prop_alpha_initial}{Initial value of the bandwidth \eqn{alpha};
thus, 1 - \code{prop_alpha_initial} is the proportion of observations whose
dual variables (i.e., sign of the residuals) are fixed at the start
(number between 0 and 1)}

\item{r}{Rate at which we increase the bandwidth (\eqn{alpha}) at every
iteration (number greater than 1)}

\item{show_iterations}{If TRUE, print the iteration number to the console;
defaults to FALSE (boolean)}

\item{...}{Arguments that will be passed to \code{\link{iqr_milp}}}
}
\value{
A named list of
\enumerate{
\item final_fit: output of \code{\link{iqr_milp}} from the final
iteration
\item time: time elapsed for this function to run
\item iteration: number of iterations before objective is 0
\item O_neg: indices for residuals that are fixed to be negative
by the final iteration
\item O_pos: indices for residuals that are fixed to be positive
by the final iteration
}
}
\description{
Fix the sign of outliers' residuals to solve the IQR MILP more quickly
}
\details{
Obtain the residuals from a quantile regression of \code{Y} on \code{D} and
\code{X}. Use these residuals to guide which ones are the outliers, and fix
their dual variables. In particular, fix the sign of the dual variables
associated with residuals whose magnitude is larger than the
\eqn{\alpha}-percentile of the absolute residuals.
(Note that the initial value of \eqn{\alpha} is given by
\code{prop_alpha_initial}.)
Then, solve the preprocessed MILP.

If the minimized objective of the preprocessed MILP is not 0,
then too many dual variables have been fixed.
So, relax the number of fixed dual variables by multiplying the bandwidth
\eqn{alpha} by \code{r}. Note that \code{r} should be at least 1 to ensure
we are relaxing our preprocessing constraints. We then solve the relaxed
preprocessed MILP.

We repeatedly relax our preprocessing until the minimized objective is
finally 0.
}
